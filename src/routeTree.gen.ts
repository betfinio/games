/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SoonImport } from './routes/soon'
import { Route as IndexImport } from './routes/index'
import { Route as RouletteIndexImport } from './routes/roulette/index'
import { Route as LuroIndexImport } from './routes/luro/index'
import { Route as LuroSoonImport } from './routes/luro/soon'
import { Route as LuroIntervalImport } from './routes/luro/$interval'

// Create/Update Routes

const SoonRoute = SoonImport.update({
  path: '/soon',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RouletteIndexRoute = RouletteIndexImport.update({
  path: '/roulette/',
  getParentRoute: () => rootRoute,
} as any)

const LuroIndexRoute = LuroIndexImport.update({
  path: '/luro/',
  getParentRoute: () => rootRoute,
} as any)

const LuroSoonRoute = LuroSoonImport.update({
  path: '/luro/soon',
  getParentRoute: () => rootRoute,
} as any)

const LuroIntervalRoute = LuroIntervalImport.update({
  path: '/luro/$interval',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/soon': {
      id: '/soon'
      path: '/soon'
      fullPath: '/soon'
      preLoaderRoute: typeof SoonImport
      parentRoute: typeof rootRoute
    }
    '/luro/$interval': {
      id: '/luro/$interval'
      path: '/luro/$interval'
      fullPath: '/luro/$interval'
      preLoaderRoute: typeof LuroIntervalImport
      parentRoute: typeof rootRoute
    }
    '/luro/soon': {
      id: '/luro/soon'
      path: '/luro/soon'
      fullPath: '/luro/soon'
      preLoaderRoute: typeof LuroSoonImport
      parentRoute: typeof rootRoute
    }
    '/luro/': {
      id: '/luro/'
      path: '/luro'
      fullPath: '/luro'
      preLoaderRoute: typeof LuroIndexImport
      parentRoute: typeof rootRoute
    }
    '/roulette/': {
      id: '/roulette/'
      path: '/roulette'
      fullPath: '/roulette'
      preLoaderRoute: typeof RouletteIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/soon': typeof SoonRoute
  '/luro/$interval': typeof LuroIntervalRoute
  '/luro/soon': typeof LuroSoonRoute
  '/luro': typeof LuroIndexRoute
  '/roulette': typeof RouletteIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/soon': typeof SoonRoute
  '/luro/$interval': typeof LuroIntervalRoute
  '/luro/soon': typeof LuroSoonRoute
  '/luro': typeof LuroIndexRoute
  '/roulette': typeof RouletteIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/soon': typeof SoonRoute
  '/luro/$interval': typeof LuroIntervalRoute
  '/luro/soon': typeof LuroSoonRoute
  '/luro/': typeof LuroIndexRoute
  '/roulette/': typeof RouletteIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/soon'
    | '/luro/$interval'
    | '/luro/soon'
    | '/luro'
    | '/roulette'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/soon' | '/luro/$interval' | '/luro/soon' | '/luro' | '/roulette'
  id:
    | '__root__'
    | '/'
    | '/soon'
    | '/luro/$interval'
    | '/luro/soon'
    | '/luro/'
    | '/roulette/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SoonRoute: typeof SoonRoute
  LuroIntervalRoute: typeof LuroIntervalRoute
  LuroSoonRoute: typeof LuroSoonRoute
  LuroIndexRoute: typeof LuroIndexRoute
  RouletteIndexRoute: typeof RouletteIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SoonRoute: SoonRoute,
  LuroIntervalRoute: LuroIntervalRoute,
  LuroSoonRoute: LuroSoonRoute,
  LuroIndexRoute: LuroIndexRoute,
  RouletteIndexRoute: RouletteIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/soon",
        "/luro/$interval",
        "/luro/soon",
        "/luro/",
        "/roulette/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/soon": {
      "filePath": "soon.tsx"
    },
    "/luro/$interval": {
      "filePath": "luro/$interval.tsx"
    },
    "/luro/soon": {
      "filePath": "luro/soon.tsx"
    },
    "/luro/": {
      "filePath": "luro/index.tsx"
    },
    "/roulette/": {
      "filePath": "roulette/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
